<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws-codebuilds on Poor Seagulls</title><link>https://PoorSeagulls.github.io/tags/aws-codebuilds/</link><description>Recent content in aws-codebuilds on Poor Seagulls</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Aug 2022 08:59:10 +0200</lastBuildDate><atom:link href="https://PoorSeagulls.github.io/tags/aws-codebuilds/index.xml" rel="self" type="application/rss+xml"/><item><title>90 Seconds, wait codebuild to finish</title><link>https://PoorSeagulls.github.io/posts/90-seconds-wait-codebuild-to-finish/</link><pubDate>Fri, 19 Aug 2022 08:59:10 +0200</pubDate><guid>https://PoorSeagulls.github.io/posts/90-seconds-wait-codebuild-to-finish/</guid><description>A couple of years ago, I came across an article regarding a Russian developer who had one brilliant rule: if anything requires more than 90 seconds, write a script to automate it.
There is where my mind went yesterday when I was executing a series of operations inherited from a &amp;ldquo;state of the art&amp;rdquo; service currently running in our production environment: run a build, wait for it to finish, and run a second build.</description><content>&lt;p>A couple of years ago, I came across an article regarding a Russian developer
who had one brilliant rule: if anything requires more than 90 seconds, write
a script to automate it.&lt;/p>
&lt;p>There is where my mind went yesterday when I was executing a series of
operations inherited from a &amp;ldquo;state of the art&amp;rdquo; service currently running in
our production environment: run a build, wait for it to finish, and run a
second build.&lt;/p>
&lt;p>This operation takes me, on average, 10 to 15 minutes to complete. Of course,
during this time, I can, and I do, something else, and most of the time, I
forget to run the second build. So to avoid furthermore this waste of time,
I decide to automate this process.&lt;/p>
&lt;p>Since a blog post is not where to share a complete script that nobody cares to
run except me, I will share the only challenging problem I faced: waiting for
an AWS CodeBuild Project to be done.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env nu
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>def await &lt;span style="color:#f92672">[&lt;/span>id&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let batch &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aws codebuild batch-get-builds --ids $id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$batch | get exit_code&lt;span style="color:#f92672">)&lt;/span> !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">{&lt;/span> exit &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let status &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $batch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get stdout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | from json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get builds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get buildStatus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> $status &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;IN_PROGRESS&amp;#39;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep 10sec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> await $id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>def main &lt;span style="color:#f92672">[&lt;/span>project&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let build &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aws codebuild start-build --project-name $project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$build | get exit_code&lt;span style="color:#f92672">)&lt;/span> !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">{&lt;/span> exit &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get stdout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | from json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | get id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> await $id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The solution was to write a function that called itself every n second while
the status was in progress.&lt;/p>
&lt;p>While it is possible to achieve the same result with a POSIX shell like Bash or
Fish, I give it a try to Nu and looking at the result, I&amp;rsquo;m sure I will use it
again.&lt;/p>
&lt;p>References&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/">Now that&amp;rsquo;s what I call a hacker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/nushell/nushell">nushell&lt;/a>&lt;/li>
&lt;/ul></content></item></channel></rss>